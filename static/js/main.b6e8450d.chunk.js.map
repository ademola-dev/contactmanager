{"version":3,"sources":["context.js","component/contacts/Contact.js","component/contacts/Contacts.js","component/layout/Header.js","component/layout/TextInputGroup.js","component/contacts/AddContact.js","component/contacts/EditContact.js","component/pages/About.js","component/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","src","alt","float","color","bind","to","height","Contacts","Fragment","key","Header","brand","href","defaultProps","TextInputGroup","label","placeholder","onChange","htmlFor","AddContact","Name","Email","Phone","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","error","EditContact","updContact","match","params","put","About","App","exact","path","component","NotFound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.b6e8450d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Contacts from './component/contacts/Contacts';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: (action) => this.setState((state) => reducer(state, action)),\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{' '}\r\n                <i\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo,\r\n                    });\r\n                  }}\r\n                  className=\"fas\"\r\n                  style={{ cursor: 'pointer' }}\r\n                >\r\n                  <img src=\"icon.png\" alt=\"drop-down-icon\" />\r\n                </i>\r\n                <i\r\n                  className=\"fas  \"\r\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                >\r\n                  <img src=\"delete.png\" alt=\"delete-icon\" />\r\n                </i>\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i>\r\n                    <img src=\"pen.png\" alt=\"icon\" height=\"60px\" />\r\n                  </i>\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\nimport { render } from 'react-dom';\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> list\r\n              </h1>\r\n              {contacts.map((contact) => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n  const { brand } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand mr-5\">\r\n          {brand}\r\n        </a>\r\n        <ul className=\"navbar-nav \">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/\" className=\"nav-link mr-5\">\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/contact/add\" className=\"nav-link mr-5\">\r\n              Add\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/about\" className=\"nav-link mr-5\">\r\n              About\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  brand: 'My App',\r\n};\r\nHeader.propTypes = {\r\n  brand: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className=\"form-control form-control-lg\"\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text',\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    Name: '',\r\n    Email: '',\r\n    Phone: '',\r\n    errors: {},\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for errors\r\n\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const res = await axios.post(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n      newContact\r\n    );\r\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">AddContact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"AddContact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    Name: '',\r\n    Email: '',\r\n    Phone: '',\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      phone: contact.phone,\r\n      email: contact.email,\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check for errors\r\n\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n    }\r\n\r\n    const updContact = {\r\n      name,\r\n      phone,\r\n      email,\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n    // clear state\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">EditContact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"UpdateContact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react';\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        {' '}\r\n        <span className=\"text-danger\">404 </span> Page not found\r\n      </h1>\r\n      <p className=\"lead\">Sorry this page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './component/contacts/Contacts';\nimport Header from './component/layout/Header';\nimport AddContact from './component/contacts/AddContact';\nimport EditContact from './component/contacts/EditContact';\nimport About from './component/pages/About';\nimport Notfound from './component/pages/NotFound';\n\nimport { Provider } from './context';\n\nimport './App.css';\nimport NotFound from './component/pages/NotFound';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header brand=\"Contact Manager \" />\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n\n{\n  /* <div className=\"container\">\n          <Contact\n            name=\"Ademola Oyamaja\"\n            email=\"ardhey101@gmail.com\"\n            phone=\"555-555-5555\"\n          />\n          <Contact\n            name=\"Mayowa Oyamaja\"\n            email=\"mayowa101@gmail.com\"\n            phone=\"333-333-3333\"\n          />\n        </div> */\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}